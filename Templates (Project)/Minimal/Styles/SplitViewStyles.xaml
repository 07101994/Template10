<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- design reference http://osguni/?id=19359&Background=19361 -->

    <SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="{ThemeResource SystemBaseMediumColor}" Opacity="1" />
    <SolidColorBrush x:Key="SplitViewForegroundBrush" Color="{ThemeResource SystemBaseHighColor}" />
    <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="{ThemeResource SystemListMediumColor}" />
    <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="{ThemeResource SystemListLowColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="{ThemeResource SystemListAccentLowColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="{ThemeResource SystemListAccentMediumColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="{ThemeResource SystemListAccentHighColor}" />

    <Style TargetType="RadioButton" x:Key="SplitViewRadioButtonStyle">
        <Setter Property="Padding" Value="1,4,0,0" />
        <Setter Property="Width" Value="48" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}"
                          HorizontalAlignment="Left">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="HoverBackground.(UIElement.Visibility)" Value="Visible" />
                                        <Setter Target="CheckedHoverBackground.(UIElement.Visibility)" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="PressedBackground.(UIElement.Visibility)" Value="Visible" />
                                        <Setter Target="CheckedPressedBackground.(UIElement.Visibility)" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="NixonGlyph.Foreground" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="CheckedBackground.(UIElement.Visibility)" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- background -->

                        <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="2">
                            <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                            <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                        </Grid>
                        <Grid x:Name="CheckedBackground" Grid.ColumnSpan="2" Visibility="Collapsed" Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                            <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                            <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                        </Grid>

                        <!-- glyph -->
                        <ContentPresenter x:Name="NixonGlyph" Content="{TemplateBinding Tag}" />

                        <!-- text -->
                        <!--<Grid Margin="{TemplateBinding Padding}" Grid.Column="1" Background="Green">
                            <ContentPresenter x:Name="ContentPresenter"
                        			Padding="0,0,20,0"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			AutomationProperties.AccessibilityView="Raw"
                        			Content="{TemplateBinding Content}"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>-->

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
